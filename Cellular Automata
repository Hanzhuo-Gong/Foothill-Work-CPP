#include <iostream>
#include <string>
using namespace std;

//-----------------------class prototype------------------
class Automaton
{
private:
   static const int RULES_SIZE = 8;

   bool rules[RULES_SIZE];
   string thisGen;
   string extremeBit; //bit, "*" or " ", implied everywhere "outside"
   unsigned int displayWidth;  //an odd number so it can be perfectly centered

public:
   static const int MAX_DISPLAY_WIDTH = 121;
   static const int DEFAULT_DISPLAY_WIDTH = 79;

   Automaton(int rule);
   string toStringCurrentGen();
   bool setRule(int newRule);
   void resetFirstGen();
   bool setDisplayWidth(int width);
   void propagateNewGeneration();
};

//global constant variable
static const char ASTERISK = '*';
static const char BLANK = ' ';
static const int CUT_IN_HALF = 2;
static const int MIN_SET_RULE = 0;
static const int MAX_SET_RULE = 255;
static const int TIME_RUNS = 100;

int main() {
   int rule;
   string strRule;

   do
   {
      cout << "Enter a rule (" << MIN_SET_RULE << "-" 
         << MAX_SET_RULE << ") : ";
      cin >> rule;
   } while (rule < MIN_SET_RULE || rule > MAX_SET_RULE);

   // create automaton with this rule and single central dot
   Automaton
      aut(rule);

   cout << "start" << endl;
   for (int k = 0; k < TIME_RUNS; k++)
   {
      cout << aut.toStringCurrentGen() << endl;
      aut.propagateNewGeneration();
   }
   cout << " end" << endl;

   return 0;
}

// ----------------------- Automaton Class Definition ---------------------
//constructor
Automaton::Automaton(int rule) {
   setRule(rule);
   resetFirstGen();
   setDisplayWidth(DEFAULT_DISPLAY_WIDTH);
}

//display method for the current generation
string Automaton::toStringCurrentGen()
{
   string combineString;

   combineString = thisGen;

   //if the string is less than display width, pad with extremebit
   while (combineString.length() < displayWidth) {
      combineString = extremeBit + combineString + extremeBit;
   }

   //if the string is over than display width, cut the string
   while (combineString.length() > displayWidth)
      combineString = combineString.substr(1, combineString.length() - 2);

   return combineString;
}

//set the rule base on user's choice
bool Automaton::setRule(int newRule) {
   int result;
   const int checkRemainer = 2;
   if (newRule < MIN_SET_RULE || newRule > MAX_SET_RULE)
      return false;

   for (int i = 0; i < RULES_SIZE; i++) {
      result = newRule % checkRemainer;
      rules[i] = result;
      newRule /= CUT_IN_HALF;
   }
   return true;
}

//set the width to display the generation
bool Automaton::setDisplayWidth(int width) {
   if (width > MAX_DISPLAY_WIDTH || width % 2 == 0 || width < 0) {
      displayWidth = DEFAULT_DISPLAY_WIDTH;
      return false;
   }
   displayWidth = width;
   return true;
}

//reset the first generation
void Automaton::resetFirstGen()
{
   thisGen = ASTERISK;
   extremeBit = BLANK;
}

//method to calculate the new generation
void Automaton::propagateNewGeneration() {
   string nextGen = "";
   int checkRule;
   thisGen = extremeBit + extremeBit + thisGen + extremeBit + extremeBit;

   for (unsigned int i = 0; i < (thisGen.length() - 2); i++) {
      checkRule = (((thisGen[i] == ASTERISK) ? 1 : 0) << 2) +
         (((thisGen[i + 1] == ASTERISK) ? 1 : 0) << 1) +
         ((thisGen[i + 2] == ASTERISK) ? 1 : 0);
      if (rules[checkRule])
         nextGen += ASTERISK;
      else
         nextGen += BLANK;
   }
   thisGen = nextGen;
}

/*---------------------------output-------------------------
Enter a rule (0-255) : 4
start
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
end
Press any key to continue . . .

Enter a rule (0-255) : 126
start
*
***
** **
*******
**     **
****   ****
**  ** **  **
***************
**             **
****           ****
**  **         **  **
********       ********
**      **     **      **
****    ****   ****    ****
**  **  **  ** **  **  **  **
*******************************
**                             **
****                           ****
**  **                         **  **
********                       ********
**      **                     **      **
****    ****                   ****    ****
**  **  **  **                 **  **  **  **
****************               ****************
**              **             **              **
****            ****           ****            ****
**  **          **  **         **  **          **  **
********        ********       ********        ********
**      **      **      **     **      **      **      **
****    ****    ****    ****   ****    ****    ****    ****
**  **  **  **  **  **  **  ** **  **  **  **  **  **  **  **
***************************************************************
**                                                             **
****                                                           ****
**  **                                                         **  **
********                                                       ********
**      **                                                     **      **
****    ****                                                   ****    ****
**  **  **  **                                                 **  **  **  **
****************                                               ****************
*              **                                             **              *
**            ****                                           ****            **
**          **  **                                         **  **          **
****        ********                                       ********        ****
**      **      **                                     **      **      **
****    ****    ****                                   ****    ****    ****
**  **  **  **  **  **                                 **  **  **  **  **  **
************************                               ************************
**                             **
****                           ****
**  **                         **  **
********                       ********
**      **                     **      **
****    ****                   ****    ****
**  **  **  **                 **  **  **  **
****************               ****************
*              **              **             **              **              *
**            ****            ****           ****            ****            **
**          **  **          **  **         **  **          **  **          **
****        ********        ********       ********        ********        ****
**      **      **      **      **     **      **      **      **      **
****    ****    ****    ****    ****   ****    ****    ****    ****    ****
**  **  **  **  **  **  **  **  **  ** **  **  **  **  **  **  **  **  **  **
*******************************************************************************
























*                                                                             *
**                                                                           **
**                                                                         **
****                                                                       ****
**                                                                     **
****                                                                   ****
**  **                                                                 **  **
********                                                               ********
**                                                             **
****                                                           ****
**  **                                                         **  **
********                                                       ********
end
Press any key to continue . . .

Enter a rule (0-255) : 131
start
*
*
*  **
*  *
*  *  ***
*  *  * *
*  *  *    **
*  *  *  ***
*  *  *  * *  ***
*  *  *  *    * *
*  *  *  *  ***    **
*  *  *  *  * *  ***
*  *  *  *  *    * *  ***
*  *  *  *  *  ***    * *
*  *  *  *  *  * *  ***    **
*  *  *  *  *  *    * *  ***
*  *  *  *  *  *  ***    * *  ***
*  *  *  *  *  *  * *  ***    * *
*  *  *  *  *  *  *    * *  ***    **
*  *  *  *  *  *  *  ***    * *  ***
*  *  *  *  *  *  *  * *  ***    * *  ***
*  *  *  *  *  *  *  *    * *  ***    * *
*  *  *  *  *  *  *  *  ***    * *  ***    **
*  *  *  *  *  *  *  *  * *  ***    * *  ***
*  *  *  *  *  *  *  *  *    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  * *  ***    * *  ***    **
*  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    **
*  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    **
*  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    **
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
*  *  *  *  *  *  *  *  *  *  *  *  *  ***    * *  ***    * *  ***    * *  **
*  *  *  *  *  *  *  *  *  *  *  *  *  * *  ***    * *  ***    * *  ***    * *
*  *  *  *  *  *  *  *  *  *  *  *  *  *    * *  ***    * *  ***    * *  ***
end
Press any key to continue . . .

Enter a rule (0-255) : 77
start
*
*
* * *
* * *
* * * * *
* * * * *
* * * * * * *
* * * * * * *
* * * * * * * * *
* * * * * * * * *
* * * * * * * * * * *
* * * * * * * * * * *
* * * * * * * * * * * * *
* * * * * * * * * * * * *
* * * * * * * * * * * * * * *
* * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
end
Press any key to continue . . .
*/
